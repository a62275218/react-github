{"version":3,"sources":["components/common/Latest.jsx","components/common/NewsTemplate.jsx","utils/date.js","utils/http.js","config/index.js"],"names":["Latest","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","articles","loading","goNewsDetail","goDetail","bind","assertThisInitialized","newsapi","everything","sources","from","convertDate","res","status","setState","totalResults","console","log","_context","t0","_this2","_this$state","react_default","a","createElement","className","Loading","length","map","item","index","key","showTimeDiff","publishedAt","onClick","url","title","Component","NewsTemplate","category","match","path","substr","topHeadlines","country","pageSize","window","open","author","src","urlToImage","content","common_Latest","__webpack_require__","d","__webpack_exports__","date","today","out","Date","concat","getFullYear","getMonth","getDate","milli","getTime","leftHours","Math","floor","leftMinutes","NewsAPI","v2","axios","create","timeout"],"mappings":"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","file":"static/js/3.93c72436.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {newsapi} from '../../utils/http';\nimport {convertDate, showTimeDiff} from \"../../utils/date\";\nimport Loading from '../common/Loading'\n\nclass Latest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            articles: [],\n            loading: true\n        };\n        this.goNewsDetail = this.props.goDetail.bind(this)\n    }\n\n\n    async componentDidMount() {\n        try {\n            let res = await newsapi.everything({\n                sources: 'google-news-au',\n                from: convertDate(null, true)\n            });\n            if (res.status === 'ok') {\n                this.setState({\n                    totalResults: res.totalResults,\n                    articles: res.articles\n                })\n            }\n        } catch (err) {\n            console.log(err)\n        } finally {\n            this.setState({\n                loading:false\n            })\n        }\n    }\n\n    render() {\n        const {loading, articles} = this.state;\n        return (\n            <div className={'latest-wrapper'}>\n                <div className={'latest-container'}>\n                    <div className={'latest-title'}>Latest News Worldwide</div>\n                    {loading?<Loading/>:\n                        <div className={'scroll-container'}>\n                        <div className={'latest-list'}>\n                            {articles.length === 0? 'Lastest News haven\\'t been updated yet':''}\n                            {articles.map((item, index) => {\n                                return <div className={'latest-item'} key={index}>\n                                    <div className={'latest-sub'}>\n                                        {showTimeDiff(item.publishedAt)}\n                                    </div>\n                                    <div className={'latest-item-title'}\n                                         onClick={() => this.goNewsDetail(item.url)}\n                                    >\n                                        {item.title}\n                                    </div>\n                                </div>\n                            })}\n                        </div>\n                    </div>}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Latest;\n","import React, {Component,Fragment} from 'react';\nimport {newsapi} from '../../utils/http';\nimport Latest from './Latest'\nimport {convertDate} from \"../../utils/date\";\nimport Loading from '../common/Loading'\n\nclass NewsTemplate extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            articles: [],\n            loading:true\n        };\n    }\n\n    async componentDidMount() {\n        let category;\n        if(this.props.match.path ==='/top-news'){\n            category = '';\n        }else{\n            category = this.props.match.path.substr(1)\n        }\n        try {\n            let res = await newsapi.topHeadlines({\n                country: 'au',\n                pageSize: 10,\n                category:category\n            });\n            if (res.status === 'ok') {\n                this.setState({\n                    totalResults: res.totalResults,\n                    articles: res.articles\n                })\n            }\n        } catch (err) {\n            console.log(err)\n        } finally{\n            this.setState({\n                loading:false\n            })\n        }\n    }\n\n    goNewsDetail(title) {\n        window.open(title)\n    }\n\n    render() {\n        const {loading, articles} = this.state;\n        return (\n            <div className={'wrapper'}>\n            {\n                loading?<Loading/>:\n                        <div className={'news-list'}>\n                            {articles.map((item, index) => {\n                                return <div className={'news-wrapper'} key={index}>\n                                    <div className={'news-title'} onClick={() => this.goNewsDetail(item.url)}>\n                                        {item.title}\n                                    </div>\n                                    <div className={'news-sub'}>\n                                        {convertDate(item.publishedAt)}\n                                        {item.author ? '   by ' + item.author : ''}\n                                    </div>\n                                    <div className={'news-content'}>\n                                        <div>\n                                            <img className={'news-img'}\n                                                 onClick={() => this.goNewsDetail(item.url)}\n                                                 src={item.urlToImage || 'http://placehold.jp/24/cccccc/ffffff/300x150.png?text=Not%20Found'}\n                                            />\n                                        </div>\n                                        <div className={'news-item-content'}>\n                                            {item.content}\n                                        </div>\n                                    </div>\n                                </div>\n                            })}\n                        <Latest goDetail={this.goNewsDetail}/>\n                    </div>\n            }\n            </div>\n        );\n    }\n}\n\nexport default NewsTemplate;\n","export const convertDate = (date,today) => {\n    let out = today? new Date():new Date(date);\n    return `${out.getFullYear()}-${out.getMonth() + 1}-${out.getDate()}`\n};\n\nexport const showTimeDiff = (date)=>{\n    let gap = new Date().getTime() - new Date(date).getTime();\n    let milli = (gap%(24*3600*1000));\n    let leftHours = Math.floor(milli/(3600*1000));\n    let leftMinutes = Math.floor((milli%(3600*1000))/(60*1000));\n    return leftHours === 0 ?`${leftMinutes} min ago`:`${leftHours} hr ago`;\n};","import axios from 'axios';\nimport apiKey from '../config/index';\nimport NewsAPI from 'newsapi';\n\nexport const newsapi = new NewsAPI(apiKey.newsapi).v2;\n\nexport const baseURL = {\n    news:'https://newsapi.org/v2/top-headlines'\n};\n\nlet $http = axios.create({\n    timeout:300000,\n});\n\nexport default $http;","export default {\n    newsapi:'c81011b157164eb2b2c54679d9f91b9b'\n};"],"sourceRoot":""}